주소 — 제1부: 개념 모델 KS X ISO 19160-1:2015

머리말
이 표준은 산업표준화법 관련 규정에 따라 산업표준심의회의 심의를 거쳐 제정한 한국산업표준이다.
이 표준은 저작권법의 보호 대상이 되는 저작물이다.
이 표준의 일부가 기술적 성질을 가진 특허권, 출원공개 이후의 특허출원, 실용신안권 또는 출원공개 후의 실용신안등록출원에 저촉될 가능성이 있다는 것에 주의를 환기한다. 관계 중앙행정기관의 장과 산업표준심의회는 이러한 기술적 성질을 가진 특허권, 출원공개 이후의 특허출원, 실용신안권 또는 출원공개 후의 실용신안등록출원에 관계되는 확인에 대하여 책임을 지지 않는다.
이 표준의 담당 위원회는 ISO/TC 211, 지리정보/지오매틱스이다.
ISO 19160은 주소(Addressing)를 공통 표준명으로 하여 다음과 같이 구성된다. — 제1부: 개념 모델
다음의 부는 개발 중이다.
— 제4부: 국제 우편 주소 구성요소 및 템플릿
다음의 부는 계획 중이다.
— 제2부: 주소 부여 우수 사례
— 제3부: 주소 데이터 품질 관리
— 제5부: 우편 이외의 용도에서의 주소 렌더링

개요
이 표준은 2015년 제1판으로 발행된 ISO 19160-1, Addressing — Part 1: Conceptual model을 기초로 기술적 내용 및 대응국제표준의 구성을 변경하지 않고 작성한 한국산업표준이다.
주소는 위치 식별과 탐색을 목적으로, 객체를 명확하게 결정하는 가장 일반적인 방법 중의 하나이다. 주소는 국가마다 각기 다르다. 많은 유럽 중심 국가들에서는 주소에서 도로망을 참조하는 것이 일반적 이지만, 일본과 같은 국가에서는 주요 도로가 아니라 행정구역의 계층구조를 참조한다. 지능형 교통 체 계 분야에서, 주소는 관심 지점과 우편 번호가 내비게이션에 적용 가능한 정보를 주소로 지정하는 단순 화된 위치 체계(좌표 참조 체계와 대비되는 개념으로)로 간주될 수 있다. 주소는 우편 배달, 긴급 대응, 고객 관계 관리, 토지 관리, 공익사업 계획 및 유지관리와 같은 다양한 목적으로 사용된다.
(주소와 관련된 활동) 주소와 관련된 많은 이해관계자들이 있으며 다음과 같다. (지방자치단체, 우편 사 업자 등) 주소를 부여하고, (고객 서비스 제공 업체 및 전자 비즈니스, 지방 및 국가 정부, 공공 서비스 제공 업체, 선거 위원회 등) 다양한 방법으로 주소를 사용하고, (시민, 배달 및 응급 서비스 제공 업체 등) 주소를 검색한다. 관련 이해관계자들은 주소 부여 프로젝트의 준비 작업 중에 파악되었으며, 현재 ISO 19160 주소 표준의 개발에 관여하고 있거나 이를 알고 있다.
전 세계에서는 다양한 주소 표준 또는 사양이 사용되고 있다. 이들 중 다수는 이 표준의 준비 작업 보 고서에 기술되어 있다. 이러한 표준 및 사양은 다양한 운영 과정에 통합되어 있으며, 경우에 따라서는 법적으로 강제되기도 한다. 이와 동시에, 몇몇 국가에서는 그들의 주소 체계를 합리화하는 방안이 추진 되고 있거나 새로운 주소 체계를 만드는 방안이 진행되고 있다. 또한, 주소는 새로운 지리적 객체(예: 도로 부속시설)를 나열하기 위해 점점 더 많이 사용되고 있으며, 차량 내비게이션과 같은 신기술에서도 점점 더 많이 사용되고 있다. 이 표준의 목표는 현재와 미래 주소 사양 간의 상호 운용성을 촉진하는 것이다.
이 표준의 준비 작업 중에 기존 표준 및 사양의 조사에 ISO 19112를 포함시켰다. ISO 19112는 (좌표 형태에서 직접적으로나 명시적으로 설명하는 것과는 대비되는) 실제 세계의 위치를 라벨 또는 코드의 형태로 간접적으로 설명하는 지리 식별자에 대해 다루고 있다. 검토 요약 결과, 주소 표준에 대한 요구 사항이 ISO 19112의 적용범위와 상당히 다르다는 결론을 내렸다. 필요한 경우, ISO 19112의 관련 부분 을 이 표준에 매핑할 수 있도록 KSXISO19160의 이 부의 프로파일을 개발할 수 있다.
이 표준에 대한 준비 작업을 하며, 다음과 같은 제목의 5개의 프로젝트가 추천되었다.
— 주소 — 개념 모델
— 주소 — 주소 부여 우수 사례
— 주소 — 주소 데이터 품질 관리
— 주소 — 국제 우편 주소 구성요소 및 템플릿 — 주소 — 우편 이외의 용도에서의 주소 렌더링
KS X ISO 19160의 이 부에서는 이러한 권장사항 중 첫 번째 개념 모델을 구현한다. 그것은 다른 주소 사양 간의 개념 모델의 상호 매핑과 같은 주소 사양 간의 상호 운용성을 촉진하는 것을 목표로 한다.

주소 — 제1부: 개념 모델
Addressing — Part 1: Conceptual model
1 적용범위
이 표준은 모델의 개념을 설명하는 용어 및 정의와 함께 주소 정보(주소 모델)에 대한 개념 모델을 정의한다. 생애주기, 메타데이터 및 주소 별칭이 개념 모델에 포함된다. 이 모델은 통합 모델링 언어 (Unified Modeling Language, UML)로 표현된다.
모델은 실제 주소 운용 구현과 별개로 주소 정보의 공통 표현을 제공한다. 다른 사양에서 제안된 개 념 모델을 대체하고자 하는 것은 아니지만, 주소 정보에 대해 서로 다른 개념 모델 간 교차 매핑을 제공하며 사양 간에 주소 정보 변환을 가능하게 한다.
이 모델은 개별 국가 또는 지역 사회의 주소 사양을 개발하기 위한 기초를 제공한다. 
2 적합성
2.1 일반
이 표준은 6가지 클래스의 요구사항 및 적합성에 대해 정의한다. 부속서 A는 이들 클래스에 대한 적 합성 시험방법을 명시하고 있다. 이 표준을 준수하는 프로파일 개발에 관한 지침은 부속서 B를 참조 한다.
2.2 모델 — 핵심
핵심(core) 적합성이 요구되는 모든 주소 모델은 A.2의 추상 시험 스위트에 설명된 모든 요구사항을
통과해야 한다.
2.3 모델 — 생애주기
생애주기(lifecycle) 적합성이 요구되는 주소 모델의 Address, AddressComponent 또는 AddressableObject 클래스는 A.3의 추상 시험 스위트에 설명된 요구사항을 통과해야 한다.
2.4 모델 — 출처
출처(provenance) 적합성이 요구되는 주소 모델의 Address 또는 AddressComponent 클래스는 A.4의
추상 시험 스위트에 설명된 요구사항을 통과해야 한다.
2.5 모델 — 지역
지역(locale) 적합성이 요구되는 주소 모델의 Address, AddressComponent 또는 AddressComponentValue 클래스는 A.5의 추상 시험 스위트에 설명된 요구사항을 통과해야 한다.
2.6 모델 — 전체 적합성
전체 적합성(full conformance)이 요구되는 주소 모델은 Core, Lifecycle, Provenance 및 Locale 적합성 클래스에 대해 지정된 추상 시험 스위트에 설명된 모든 요구사항을 통과해야 한다.
2.7 주소 프로파일 문서
적합성이 요구되는 모든 문서는 A.6의 추상 시험 스위트에 설명된 요구사항을 통과해야 한다. 비고 주소 프로파일 문서 적합성 클래스에 적합한 주소 모델의 보기는 부속서 C를 참조한다. 
3 인용표준
다음의 인용표준은 전체 또는 부분적으로 이 표준의 적용을 위해 필수적이다. 발행연도가 표기된 인 용표준은 인용된 버전만을 적용한다. 발행연도가 표기되지 않은 인용표준은 최신판(모든 추록을 포함) 을 적용한다.
KS X ISO 8601, 데이터 요소 및 교환 포맷 — 정보교환 — 날짜 및 시각의 표기 KS X ISO 19115-1:2014, 지리정보 — 메타데이터 — 제1부: 기본 원칙
ISO 19103:2015, Geographic information — Conceptual schema language ISO 19107:2003, Geographic information — Spatial schema
비고 ISO 19107:2003에 대응되는 KS는 2014년도에 고시된 KS X ISO 19107이다.
ISO 19135-1:2015, Geographic information — Procedures for item registration — Part 1: Fundamentals
ISO 19152:2012, Geographic information — Land Administration Domain Model (LADM) 비고 ISO 19152:2012에 대응되는 KS는 2014년도에 고시된 KS X ISO 19152이다.
4 용어와 정의
이 표준의 목적을 위하여 다음의 용어와 정의를 적용한다.
4.1
주소(address)
식별 및 위치 파악을 목적으로 단일 객체를 명확하게 확인할 수 있게 하는 구조화된 정보
보기 1 객체가 기업체인 경우의 주소: 611 Fifth Avenue, New York NY 10022.
보기 2 객체가 건물인 경우의 주소: Lombardy House, 809 Lombardy Street, The Hills, 0039, South Africa.
보기 3 객체가 건물에 대한 토지 필지인 경우의 주소: San 4–5, Munjae-ro, Songpa-gu, Seoul, 13144, South Korea.
보기 4 객체가 학교 또는 대형 아파트 단지와 같은 집합 건물인 경우의 주소: 228-dong 404-ho, 26 Kyunghee-daero, Dongdaemun-gu, Seoul 130–701, South Korea.
비고 1 객체는 실제 세계에서 식별 가능한 것이다.즉, 전자 주소 및 가상 주소는 제외된다. 
비고 2 “식별”이란 주소의 구조화된 정보가 명확하게 객체를 확인한다는 것을 의미한다. 즉, 사람이 객체를 식별하는 데 도움이 된다. 즉, 여기서 “식별”이란 데이터베이스 또는 데이터 세트의 고유한 식별자를 의미하는 것이 아니다.
비고3 객체에 대해 여러 주소가 있을 수 있지만, 어느 순간(또는 생애주기 단계)에 주소는 명확하게 단일 객체를 확인하여야 한다(이에 대한 보기는 부속서 D 참조).
비고4 동일한 주소 부여 대상에 대해 두개의 다른 주소 클래스(4.4)에서 가져온 두 개의 주소(즉 서로 다른 구성요소 세트를 갖는 두 개의 주소)는 서로 다른 주소이다(이에 대한 자세한 보기는 부속서 E 참조).
비고5 동일한 주소 부여 대상과 동일한 주소 클래스의 두 개의 주소가 있지만,서로 다른 두언어 로 된 두 개의 주소도 있다(이에 대한 자세한 보기는 부속서 E 참조).
비고6 주소 부여 대상 외에도, 주소와 관련된 다수의 사람, 조직, 수취인 또는 기타 객체가 있을 수 있다. 이것들은 주소 모델의 외부에 있다(이에 대한 보기는 부속서 C 및 부속서 F 참조).
4.2
주소 부여 대상(addressable object) 주소(4.1)를 할당할 수 있는 객체
4.3
주소 별칭(address alias)
동일한 주소 부여 대상(4.2)을 명확하게 확인하는 주소(4.1) 세트 중 하나
4.4
주소 클래스(address class)
동일한 주소 구성요소(4.5), 연산, 방법, 관계 및 의미를 공유하는 주소(4.1) 세트에 대한 설명
보기 1 “25 Blue Avenue Hatfield 0028” 및 “384 Green Street Motherville 2093”은 같은 주소 클래스에 서 온 것이다.
보기 2 “PO Box 765 Goodwood 33948” 및 “PO Box 567 Grayville 98373”은 같은 주소 클래스에서 온 것이다.
4.5
주소 구성요소(address component) 주소(4.1)의 구성 부분

비고 1 주소 구성요소는 공간 객체(4.17)(예: 행정 경계 또는 토지 필지) 또는 비공간 객체(예: 조직 또는 사람)와 같은 다른 객체를 참조할 수 있다.
비고 2 주소 구성 요소는 하나 이상의 대체값을 가질 수. 있다.예를 들면,다른 언어 또는 약어
4.6
주소 운용(addressing) 주소(4.1) 관련 활동
4.7
주소 위치(address position) 주소(4.1)를 표현하는 위치
비고 주소는 하나 이상의 위치로 표현될 수 있다(예: 건물의 다른 출입구가 있는 경우).
4.8
주소 참조 체계(address reference system)
정의된 주소 구성요소(4.5) 세트 및 주소(4.1) 조합에 대한 규칙
4.9
하위 주소(child address)
상위 주소(4.13)에 관하여 정의된 주소(4.1)
4.10
하위 주소 부여 대상(child addressable object)
다른 주소 부여 대상에 관계되는 주소가 부여된 주소 부여 대상(4.2)
보기1 아파트 단지 내의 아파트
보기 2 일본의 gaiku(가구) 내의 jukyo bango(주거번호)
보기 3 건물단지 내의 건물. 한국의 집합 건물 내의 동(건물의 부속건물 또는 구역).
4.11
계보(lineage)
하나의 자원 생산에 사용된 출처(provenance)(4.16), 소스 및 생산 처리과정
[출처: KS X ISO 19115-1:2014, 4.9]
4.12
지역(locale)
언어 및 문화적 규약에 따르는 사용자 환경의 하위 세트(subset)의 정의
비고 컴퓨팅에서 지역은 사용자의 언어, 국가 및 사용자가 사용자 인터페이스에서 보고자 하는 특수 변형 기본 설정을 정의하는 매개변수 세트다. 일반적으로, 지역 식별자는 최소한 언어 식별자 와 영역 식별자로 구성된다.
[출처: ISO/IEC 9945:2009, 3.211, 수정 — 이 항목에 대해 ISO/IEC IEEE 9945:2009에 있던 비고를 삭 제하고 비고 1 추가]
4.13
상위 주소(parent address)
상위 주소 부여 대상(4.14)의 주소(4.1)
비고 하위 주소 부여 대상(4.9)의 주소는 상위 주소의 주소 구성요소(4.5)를 완전히 상속한다.
4.14
상위 주소 부여 대상(parent addressable object)
하나 이상의 다른 주소 부여 대상을 완전히 포함하는 주소 부여 대상(4.2)
보기 1 여러 아파트가 있는 하나의 단지
보기 2 일본의 여러 jukyo bango(주거번호)가 있는 gaiku(가구)
보기3 여러건물이있는단지.한국의여러동(건물의날개또는구역)이있는단지
4.15
프로파일(profile)
한 개 이상의 기반 표준 또는 특정 함수를 완성시키는 데 필수적인 표준이 선택된 절, 클래스, 선택 조건 및 매개변수의 식별을 포함하는 기반 표준에 대한 하위 세트의 모음
[출처: ISO 19106:2004, 4.5]
4.16
출처(provenance)
기록을 생성, 축적, 유지관리 및 사용하는 조직 또는 개인
비고 출처 정보는 다음의 내용을 포함한다 
— 기록의 소스 또는 기원
— 기록에 대한 모든 변경 사항
— 생성 이후 기록을 보관했던 모든 조직 또는 개인.
[출처: ISO 5127:2001, 4.1.1.10, 수정 — 비고 1 추가]
4.17
공간 객체(spatial object)
지형지물의 공간적 특성을 표현하는데 사용되는 객체
[출처: ISO 19107:2003, 4.69] 5 기호 및 약어
이 표준의 목적을 위하여 다음의 기호 및 약어 용어를 적용한다. UML Unified Modeling Language(통합 모델링 언어)
6 주소 모델
6.1 일반
KS X ISO 19160의 이 부에서 설명하는 주소 모델은, 우편 주소를 설명하는 모델 또는 특정 도시 및 국가에서 사용되는 주소 모델을 모델링하는 것과 같은, 특정 주소 부여 모델을 개발하는 도구로 사 용된다. 그림 1부터 그림 3까지는 세부 수준이 높아지는 주소 모델의 개요를 제시하고 있다.
주소 모델의 핵심은 주소는 하나 이상의 주소 구성요소 세트로 구성된다는 개념을 기반으로 한다(그 림 1 참조). 주소란 위치 식별 및 탐색을 목적으로 객체를 명확하게 확인할 수 있는 구조화된 정보이 다. 주소 구성요소 값은 구조화된 정보의 구성 부분을 형성한다. 간단한 예는, 여러 행의 주소를 하 나의 주소로 보는 경우이다. 보다 복잡한 예는, 주소가 (건물)번호, 도로 이름, 장소 이름 및 우편 번 호와 같은 하나 이상의 주소 구성요소를 포함하는 경우이다. 주소에서 구조화된 정보로 객체를 식별 하고 찾을 수는 있지만, 주소가 객체에 대한 유일한 식별자는 아니다.
주소 구성요소 값은 라벨이며, 때로는 다른 객체(ReferenceObject)에 대한 참조이기도 하다. 예를 들 어, 장소 이름이 장소의 경계를 명시하는 객체를 참조하거나 또는 수취인이 수취인에 대한 정보(예: 고객 이름 및 구매 내역)를 가진 객체를 참조할 수 있다. 주소 모델의 나머지 요소는 건물, 주거지 또는 토지 필지와 같은 객체(AddressableObject) 및 메타데이터(AddressAlias, AddressedPeriod, AddressSpecifications)를 주소와 연결할 수 있도록 한다. 그림 2를 참조한다.
한 개 이상의 주소가 동일한 객체를 명확하게 확인하는 경우, 이러한 주소들은 주소 별칭으로 참조 된다. 전형적인 예로, 두 개의 도로 모퉁이에 접하는 하나의 건물이 각 도로마다 출입구가 있어, 출 입구마다 주소가 부여된 건물이다. 다른 예로는, 주소가 구어체로 변화된 경우 또는 주소가 여러 언 어로 된 경우를 포함한다.
때로는 이미 부여된 주소가 다른 객체에 재할당되기도 하는데, 하나의 부지에 추가적으로 건물들이 분리되거나 신축되는 경우이다. 필요한 경우, AddressedPeriod는 주소가 특정 주소 부여 대상과 연관 되어 있는 동안의 표현을 허용한다.
적용 및 이용이 가능한 경우, 주소 참조 체계(주소 구성요소를 주소로 결합하는 규칙) 및/또는 모델에 표시된 주소를 설명하는 사양 또는 문서에 대한 메타데이터가 AddressSpecification 클래스에 제공된다.
주소에는 위치를 지정하는 좌표가 포함될 수 있다. 주소가 객체에 할당되면, 주소의 위치는 주소가 지정된 객체로부터 추론될 수 있다. 이는 주소의 위치를 명시하는 매우 다른 두 가지 방법이 있기 때문에, KS X ISO 19160의 이 부를 준수하는 주소 모델은 모델에서 주소의 위치가 어떻게 표현되는 지 명확하게 명시하는 것이 중요하다.
마지막으로, 주소 부여 대상은 다른 주소 부여 대상과 상위-하위 관계를 가질 수 있다. 예를 들면 하 나의 건물주소는 여러 개의 아파트 또는 상가의 대표가 되는 상위 주소 개념이다. 주소는 다른 주소 와의 상위-하위 관계를 가질 수도 있다. 건물 주소는 아파트 또는 사무실 주소의 상위 주소일 수 있 다(그림 3 참조).
6.2 다이어그램
그림 4는 UML의 주소 모델에 대한 개요를 표현한다.
그림 5는 주소 모델에서 정의된 핵심 유형을 보여준다.
그림 6은 주소 모델에서 정의된 핵심 코드 목록을 보여준다.
비고 AddressableObjectType, AddressClass, AddressPositionType 및 ReferenceObjectType 코드 목 록에 대해 알려진 중복이 거의 없는, 가능한 값이 너무 많다. 따라서 이러한 코드 목록은 비어 있다. 각 주소 모델은 필요에 따라 코드를 명시해야 한다(샘플 프로파일의 가능한 코드 목록 값은 부속서 C 참조).
보기 1 building, house, landParcel, landmark, apartment 및 complexOfBuildings는 AddressableObjectType 코드 목록에 대한 코드의 예이다.
보기 2 thoroughfareAddress, landmarkAddress 및 informalAddress는 AddressClass 코드 목록에 대 한 코드의 예이다.
보기 3 centroid, streetFront 및 approximated는 AddressPositionType 코드 목록에 대한 코드의 예이다. 보기 4 street, administrativeArea, individual 및 organization은 ReferenceObjectType 코드 목록에 대한 코드의 예이다.
그림 7은 생애주기 정보와 관련된 주소 모델의 유형과 코드 목록을 보여준다.
그림 8은 소스 정보와 관련된 주소 모델의 단일 유형을 보여준다.
6.3 클래스
6.3.1 일반
그림 8 — 출처 정보에 대한 주소 모델 유형
클래스와 그 속성의 정의는 6.3.2에 나와 있다. 각 속성의 이름, 정의, 의무 또는 조건, 최대 발생, 데 이터 유형 및 도메인이 제공된다. 일부 속성 도메인은 다른 표준의 데이터 유형이나 코드 목록과 같 은 UML 요소에 대한 참조로 지정된다. 이 UML 요소는 ISO/TC 211 조화된 모델(www.isotc211.org) 에서 찾아 볼 수 있다.
6.3.2 Address
주소 클래스는 식별 및 위치 파악을 목적으로 객체를 명확하게 확인할 수 있는 구조화된 정보를 나 타낸다. AddressComponents의 비어 있지 않은 세트로 구성된다.
보기 “99 Lombardy Street, The Hills, 0039”와 같은 주소는 건물 번호(99), 도로 이름(Lombardy Street), 장소 이름(The Hills) 및 우편 번호(0039)와 같은 요소로 구성되어 있다. 주소 클래스의 속성은 표 1에 정의되어 있다.
6.3.3 AddressComponent
AddressComponent는 주소를 구성한다. 주소를 구성하는 경우 AddressComponents에 빈 요소가 있 으면 안 된다.
보기 “The Hills”는 주소 “99 Lombardy Street, The Hills, 0039”의 구성 부분이다. AddressComponent 클래스의 속성은 표 2에 정의되어 있다.
6.3.4 AddressableObject
주소는 AddressableObject, 즉 주소에 의해 식별되거나 위치를 알 수 있는 객체를 명확하게 결정한다.
보기 1 다음 주소는 사람의 거주지를 명확하게 결정한다. 99 Lombardy Street, The Hills, 0039, South Africa.
보기 2 다음 주소는 건물을 명확하게 결정한다. Lombardy House, 809 Lombardy Street, The Hills, 0039, South Africa.
보기 3 다음 주소는 건물 안에 있는 문(아파트)을 명확하게 결정한다. Room 4–6, Lombardy House, 809 Lombardy Street, The Hills, 0039, South Africa.
AddressableObject 클래스의 속성은 표 3에 정의되어 있다.
6.3.5 ReferenceObject
ReferenceObject는 주소 구성요소 값이 참조할 수 있는 객체
보기 1 사람이나 조직이 수취인의 ReferenceObject일 수 있다.
보기 2 장소 이름 경계가 장소 이름에 대한 ReferenceObject일 수 있다. 보기 3 도로 중심선 링크들은 도로 이름에 대한 ReferenceObject일 수 있다.
ReferenceObject 클래스의 속성은 표 4에 정의되어 있다.
6.3.6 AddressSpecification
AddressSpecification은 주소와 이에 대한 구성 부분(구성 요소)의 사양이다.
보기 SANS 1883-1[16]은 남아공에서 사용되는 주소에 대한 사양이다.
비고 classSpecification의 정보는 주소 데이터의 검증 및 품질 검사에 사용될 수 있다. AddressSpecification 클래스의 속성은 표 5에 정의되어 있다.
6.4 유형 
6.4.1 일반
유형 및 속성의 정의는 6.4에 나와 있다. 각 속성의 이름, 정의, 의무 또는 조건, 최대 발생, 데이터 유형 및 도메인이 제공된다.
6.4.2 AddressClassSpecification
AddressClassSpecification 유형은 주소 클래스에 대한 정보를 표현한다. AddressClassSpecification의 속성은 표 6에 정의되어 있다.
비고 AddressClassSpecification의 속성은 주소 데이터 검증 및 품질 검사에 사용될 수 있다.
6.4.3 AddressPosition
AddressPosition은 주소의 대표 위치에 대한 정보를 표현한다. AddressPosition의 속성은 표 7에 정의 되어 있다.
6.4.4 AddressComponentValue
AddressComponentValue는 주소 구성요소의 값에 대한 정보를 표현한다. AddressComponentValue의 속성은 표 8에 정의되어 있다.
6.4.5 AddressAlias
AddressAlias 형식은 주소 별칭에 대한 정보를 나타낸다. AddressAlias의 속성은 표 9에 정의되어 있다.
6.4.6 AddressedPeriod
AddressedPeriod 유형은 주소가 지정된 객체와 연관된 기간을 표현한다. AddressedPeriod의 속성은 표 10에 정의되어 있다.
6.4.7 Lifespan
생애주기 유형은 주소, 주소 구성요소 또는 주소 부여 대상의 수명을 설명하는 정보를 표현한다. 생 애주기의 속성은 표 11에 정의되어 있다.
6.4.8 AddressProvenance
AddressProvenance 유형은 기록의 출처 또는 기원, 기록의 변경 사항, 기록을 보관하는 기관 또는 개인 등과 같은 소스정보를 표현한다. AddressProvenance의 속성은 표 12에 정의되어 있다. AddressProvenance에서 파생된 클래스는 KS X ISO 19115-1 및/또는 Dublin Core(ISO 15836)에 지정 된 하나 이상의 추가 메타데이터 속성을 가질 수 있다.
6.5 코드 목록
6.5.1 일반
표 13에서 표 18은 주소 모델의 개별 코드 목록 값에 대한 정의를 제공한다.
비고 각 프로파일은 추가적 코드 목록값 을 명시하거나 여기에 정의된 코드목록값의 하위 세트만을 포함할 수 있다.
6.5.2 AddressAliasType
AddressAliasType은 두 주소 간의 별칭 연관을 설명한다. AddressAliasType 코드 목록에 대한 주소 모델에 정의된 값은 표 13에 정의되어 있다.
6.5.3 AddressComponentType
AddressComponentType은 일반적으로 사용되는 주소 구성요소 유형을 명시하는 값을 포함한다. 이 값은 표 14에 정의되어 있다.
6.5.4 AddressComponentValueType
AddressComponentValueType은 주소 구성요소 값의 유형을 명시한다. AddressComponentValueType 코드 목록의 주소 모델에 정의된 값은 표 15에 정의되어 있다.
비고 주소 구성요소의 값(이름)에 대한 맞춤법 교정이 대체 주소 구성요소 값을 표현하는 것은 아니다.
보기 1 “Gordon Rd”는 “Gordon Road”의 약자로 사용된다(이에 대한 보기는 부속서 E 참조).
보기 2 “Cologne”은 독일의 “Köln”에 대한 대체 언어이다(자세한 보기는 부속서 E 참조).
보기 3 “Jozi”, “Joburg” 또는 “Egoli”는 남아공의 “Johannesburg”에 대한 구어체 대체 언어이다(자세한
보기는 부속서 E 참조).
6.5.5 AddressLifecycleStage
AddressLifecycleStage는 Address 또는 AddressComponent의 각기 다른 생애주기 단계를 나타낸다. AddressLifecycleStage 코드 목록에 대한 주소 모델에 정의된 값은 표 16에 정의되어 있다.
6.5.6 AddressableObjectLifecycleStage
AddressableObjectLifecycleStage는 AddressableObject의 다른 생애주기 단계를 표현한다. AddressableObjectLifecycleStage 코드 목록에 대한 주소 모델에 정의된 값은 표 17에 정의되어 있다.
6.5.7 AddressStatus
AddressStatus는 주소 부여 상태를 명시하는 값을 포함한다. AddressStatus 코드 목록에 대한 주소 모델에 정의된 값은 표 18에 정의되어 있다.
6.5.8 AddressTypology
AddressTypology는 주소 클래스의 유형을 지정하는 값을 포함한다. AddressTypology 코드 목록에 대 한 주소 모델에 정의된 값은 표 19에 정의되어 있다.
보기 1 국제무역회사는 140개국에 고객을 두고 있으며 고객파일에 연락처 및 배송주소를 유지 관리한다. 회사는 각 관할 지역에서 사용하는 개별 클래스를 이해하기보다는 유형체계 개념 을 활용하여 전반적으로 관할 주소가 어떻게 구성되어 있는지를 이해한다.
보기 2 여러 프로파일을 사용할 수 있는 경우, 일반적 규칙을 주장하기 위해 유형체계 개념이 사용 될 수 있다(예: 소프트웨어 도구의 개발하는 경우).
7 요구사항
7.1 요구사항 클래스: 핵심
7.1.1 의존성
표 20은 핵심 요구사항 클래스의 대상 유형 및 의존성을 보여준다.
7.1.2 핵심 요구사항 1: 클래스
주소 모델은 Address와 AddressComponent 클래스를 포함해야 하고, 그로부터 파생된 하나 이상의
클래스를 포함할 수 있다.
보기 1 주소 구성요소의 예로는 도로 이름, 장소 이름, 수취인 및 우편번호 등이 있다.
주소 모델에는 AddressableObject, AddressSpecification, AddressAlias 및 AddressedPeriod 클래스 또 는 클래스에서 파생된 클래스가 포함될 수 있다.
보기 2 주소부여대상의 예로는 건물,집,주요 지형 지물 및 아파트 등이있다. 주소 모델은 ReferenceObject 클래스에서 파생된 클래스를 포함할 수 있다.
보기 3 행정 구역을 표현하는 폴리곤(polygon)
보기 4 건물의 풋프린트(footprint)를 표현하는 폴리곤 또는 건물을 명시하는 점 보기 5 토지 필지를 표현하는 폴리곤
보기 6 우편 수취인인 사람 또는 조직에 대한 정보(주소 구성요소)
비고 외부 데이터가 참조 객체를 통해 주소 구성요소와 연관되는 방법에 대한 보기는 부속서 F를 참조한다.
7.1.3 핵심 요구사항 2: 연관
주소는 하나 이상의 주소 구성요소로 구성된다. 주소 구성요소는 하나 이상의 주소에 속해야 한다.
주소는 주소 부여 대상을 명확하게 확인할 수 있게 한다. 주소 부여 대상은 주소에 의해 명확하게 확인될 수 있다. 같은 주소 부여 대상을 명확하게 확인할 수 있는 복수의 주소는 주소 별칭이다.
보기 1 도로모퉁이에 있는 건물에 대한 서로 다른주소는 두 개 이상의 주소가 동일한 주소부여 대상을 명확하게 확인하는 예이다(자세한 보기는 부속서 E 참조).
주소 구성요소는 두 번째 주소 구성요소의 범위 내에 있을 수 있다. 예를 들면, 위의 주소 구성요소 값들이 위의 두 번째 주소 구성요소 내에서 명확해지는 것을 보장하는 규칙에 따라 할당되는 경우이다.
보기 2 교외 지역 내에서 명확하게 지정된 도로 이름(도로 이름이 도시 내에서 명확할 수도 있음). 
보기 3 주요 도로 내에서 명확하게 할당된 주소 번호.
주소 구성요소는 참조 객체를 참조할 수 있다. 참조 객체는 하나 이상의 주소 구성요소에 의해 참조 되어야 한다.
보기 4 도로 중심선을 참조하는 주요 도로 이름(AddressComponent에서 파생됨).
보기 5 주요 도로 중심선 구분을 참조하는 주요 도로 이름(AddressComponent에서 파생됨).
보기 6 우편 수취인에 관한 정보를 참조하는 우편 수취인(AddressComponent에서 파생됨). 예들 들면, 나이, 성별, 교육 수준.
하위 주소 부여 대상은 하나의 상위 주소 부여 대상을 가져야 한다. 상위 주소 부여 대상은 하위 주 소 부여 대상을 가질 수 있다.
보기 7 건물은 건물 내의 개별 아파트(하위 주소 부여 대상)의 상위 주소 부여 대상이다.
보기 8 일본에서 gaiku(가구)는 gaiku(가구) 안에 있는 개별 jukyo bango(주거번호)(하위 주소 부여 대 상)의 상위 주소 부여 대상이다.
보기 9 한국에서 집합 건물은 개별 동(건물)의 상위 주소 부여 대상(하위 주소 부여 대상)이다.
하위 주소에는 하나의 상위 주소가 있어야 한다. 상위 주소는 하위 주소를 가질 수 있다.
보기 10 건물 주소는 건물 안의 개별 아파트 주소의 상위 주소이다.
보기 11 일본에서는 gaiku(가구)의 주소가 gaiku(가구)의 개별 jukyo bango(주거번호) 주소의 상위 주소이다.
보기 12 한국에서 집합 건물의 주소는 개별 동(건물) 주소의 상위 주소이다.
주소는 하나 이상의 주소 사양에 따라 지정될 수 있다. 주소 사양은 클래스에 대한 유형론 및 유효 한 구성요소 유형 세트를 지정하는 주소 클래스 사양 세트를 포함할 수 있다.
비고 법적조치, 기술 사양 또는 주소 부여 표준이 주소 사양일 수 있다.
보기 13 SANS 1883.[16]
보기 14 2011년 한국 도로명 주소법.
보기 15  D2.8.1.5 조사.[10]
보기 16 UPU S42.[17]
7.1.4 핵심 요구사항 3: 속성
주소 모델의 클래스는 표 1에서 표 12에 명시된 필수, 조건부 및 선택적 속성을 포함해야 한다. 7.2 요구사항 클래스: 생애주기
7.2.1 의존성
표 21은 생애주기 요구사항 클래스의 대상 유형과 의존성을 보여준다.
7.2.2 생애주기 요구사항 1: 생애주기 속성
lifecycleStage 및 lifespan 속성(예: Address, AddressComponent 또는 AddressableObject 클래스)은 필수 항목이다.
7.2.3 생애주기 요구사항 2: 고유 식별자
고유 식별자(예: Address.id, AddressComponent.id 및 AddressableObject.id)는 필수 항목이다.
7.2.4 생애주기 요구사항 3: 버전 증가
수명 속성의 버전 속성(예: Address, AddressComponent 또는 AddressableObject 클래스)은 데이터 객 대한 모든 변경 사항에 따라 증가한다.
7.3 요구사항 클래스: 출처
7.3.1 의존성
표 22는 출처 요구사항 클래스의 대상 유형과 의존성을 보여준다.
7.3.2 출처 요구사항 1: 출처 속성
출처 속성(예: Address, AddressComponent 및 AddressableObject 클래스)은 필수 항목이다. 7.4 요구사항 클래스: 지역
7.4.1 의존성
표 23에서는 지역 요구사항 클래스의 대상 유형 및 의존성을 보여준다.
7.4.2 지역 요구사항 1: 지역 속성
지역 속성(예: Address, AddressComponent 및 AddressComponentValue 클래스)은 필수 항목이다. 7.5 요구사항 클래스: 주소 프로파일 문서
7.5.1 의존성
표 24는 주소 프로파일 문서 요구사항 클래스의 대상 유형과 의존성을 보여준다.
7.5.2 요구사항 및 권장사항
주소 프로파일 문서는 다음의 내용을 포함해야 한다.
a) 프로파일의 개발자 이름(예: 표준 기관 또는 기관 이름) 및 그 연락처 세부 정보
b) 프로파일이 개발된 사양. 이것은 사양, 표준 또는 법령, 또는 프로파일에 표현되는 주소에 대한 설명일 수 있다.
c) 프로파일이 준수하는 적합성 클래스의 이름
d) 주소가 할당된 목적 및 주소를 할당하는 권한과 같은 프로파일에 표현된 주소에 대한 배경 정보
e) 선택적 클래스(AddressSpecification, AddressableObject, ReferenceObject, AddressAlias, AddressedPeriod) 및 주소 모델의 선택적 연관에 대해 필수적, 조건부, 선택적 범위를 벗어났는지 또는 프로파일에서 금지되는지 등을 명시적으로 언급한다. 관련 클래스에 대한 제약 조건은 선택 적 속성이 필수적, 선택적, 조건부, 범위를 벗어났는지 또는 프로파일에서 금지되는지 여부를 명시하는데 사용된다.
f) 하나 이상의 다이어그램에서 프로파일 모델의 요소들은 다음과 같다.
1) 각 필수 클래스(Address, AddressComponent), 조건부 클래스 및 프로파일의 선택적 클래스
2) 주소 모델의 클래스, 유형 또는 코드 목록으로부터 파생된 각 프로파일별 클래스, 유형 또는 코드 목록
3) 프로파일의 각 필수, 선택적, 조건부 및 프로파일별 연관
4) 프로파일의 각 필수, 선택적, 조건부 및 프로파일별 속성
g) AddressClass 코드 목록에 정의된 각 주소 클래스에 대해 필수, 조건부 또는 선택적 주소 구성요 소를 명시하는 행렬
h) AddressComponentType 코드 목록의 각 값에 대한 AddressComponentValue.value의 어떤 유형도 특수한 AddressCompone nt 클래스의 제약 조건 또는 AddressComponent Type의 각 값에 대한 AddressComponentValue.value의 어떤 유형을 명시하는 테이블로 프로파일에 표시되어야 한다.
i) 주소및/또는주소부여대상의위치가프로파일에표현되는위치및방법에대한설명
j) 몇 가지 샘플 주소에 대한 인스턴스 데이터 다이어그램(보기)
지역 정보가 프로파일에 포함되는 경우, 다음과 같은 내용이 이 문서에 포함된다.
— 프로파일 모델의 클래스에 지역 정보가 포함되도록 지정하는 서술
문서에는 다음 내용이 포함되어야 한다.
— 프로파일의 각 속성과 사양 간의 양방향 매핑
문서의 다이어그램은 다음과 같이 준비해야 한다.
— 기초 클래스들과 프로파일된 특정 클래스들을 구분하기 위해, 주소 모델에서 (기초) 클래스들에 대해서는 투명 배경색을 추천하며, 프로파일된 특정 클래스들은 음영으로 채워진 색상 배경을 추 천한다.
— 다이어그램은 유사한 위치 패턴(즉, 왼쪽 상단의 AddressSpecification, Address)을 사용해야 한다. AddressComponent 및 ReferenceObject의 오른쪽에 있는 AddressableObject)를 이 표준의 그림 1 에서 그림 4까지에 있는 주소 모델에 사용된 주소 모델에 연관시킨다.
다음은 문서에 포함될 수 있다.
— 프로파일 고유의 코드 목록 값의 정의가 있는 표
비고 이 요구사항 및 권고사항을 준수하는 샘플 프로파일은 부속서 C에 포함되어 있다.

부속서 B (참고)
프로파일 개발에 대한 지침
B.1 일반
B.2 및 B.3은 프로파일 개발자를 위한 지침으로 제공된다. ISO 19160-1의 프로파일 개발 단계는 B.2 에 설명되어 있다. B.3에는 프로파일의 주소 모델에 대해 UML을 개발하는 단계가 설명되어 있다. 프 로파일은 ISO 웹사이트 http://standards.iso.org/iso/19160/-1/에 게시될 수 있다(B.4의 지침 참조).
B.2 프로파일 개발 단계
a) 프로파일이 준수해야 하는 적합성 클래스를 결정한다.
— 모든 프로파일은 핵심 적합성 클래스를 준수해야 한다.
— 또한 프로파일의 클래스는 하나 이상의 추가적인 적합성 클래스(Lifecycle, Provenance 및 Locale)를 준수할 수 있다.
b) 포함될 클래스를 식별한다.
— 모든 필수 클래스(Address, AddressComponent)는 프로파일에 포함되어야 한다.
— 각 선택적 클래스(AddressSpecification, AddressableObject, ReferenceObject, AddressAlias,
AddressedPeriod)에 대해, 선택적 클래스가 선택적으로 유지되는지 또는 제약 조건을 지정하여 프로파일에서 다음 중 어디에 해당하는지 확인한다(필수적, 조건부, 범위 외 또는 금지).
— 필요한 경우, 프로파일별 클래스를 추가하거나 파생시킨다. 지리 마크업 언어(GML) 호환 프로 파일에서 하위 클래스는 featureType 스테레오타입을 가져야 하며, 속성 및 제약 조건을 하위
클래스에 복사해야 한다.
c) 포함될 연관을 식별한다.
— 모든 필수 연관은 프로파일에 포함되어야 한다.
— 각 선택적 연관에 대해, 선택적 연관이 프로파일에 선택적으로 유지되는지 또는 제한 조건을
명시하여 프로파일에서 다음 중 어디에 해당되는지 결정한다(필수적, 조건부, 범위 외 또는 금지).
— 필요한 경우 프로파일별 연관을 추가한다.
d) 코드 목록 값을 지정한다.
— 코드 목록 값은 AddressClass에 대해 지정될 수 있다.
— 코드 목록 값은 AddressableObjectType, AddressPositionType 및 ReferenceObjectType에 대해지정될 수 있다. 관련 속성이 모델에 포함되어 있는 경우에만 이 값을 지정하면 된다.
— 필요한 경우, 다른 코드 목록에 프로파일별 값을 추가한다(예: AddressComponentType, AddressComponentValueType, AddressStatus, AddressAliasType, AddressLifecycleStage 및 AddressableObjectLifecycleStage). 기존 코드 목록 값의 정의가 프로파일 요구사항을 충족시키
지 않으면 특정 프로파일 값을 추가해야 한다.
e) 포함될 속성을 식별한다.
— 모든 필수 속성은 프로파일에 포함되어야 한다.
— 각 선택적 속성에 대해, 선택적 속성이 프로파일에서 선택적으로 유지되는지 또는 (제한 조건을 지정하여) 속성에서 다음 중 어디에 해당되는지를 결정한다(필수적, 조건부, 범위 외 또는 금지).
— 필요한 경우 프로파일별 속성을 추가한다.
— AddressComponentType 코드 목록에서 각각에 대한 제한 없음 유형을 테이블 또는 특수 AddressComponent 클래스의 제한 조건으로 지정한다.
— 해당되는 경우, 프로파일의 각 속성이 관련 표준/사양에 매핑되고 다시 매핑되는 방식을 설명한다.
f) AddressClass 코드 목록 값이 프로파일에 명시된 경우, 프로파일의 주소 클래스를 지정한다.
— AddressClass 코드 목록에 정의된 각 주소 클래스에 대한 유효한 주소 구성요소를 명시하는 행렬을 포함해야 한다.
g) 여러 주소에 대한 인스턴스 데이터(보기)를 작성하여 프로파일을 검증한다.
h) 주소 프로파일 문서 적합성 클래스(2.7 참조)에 따라 문서를 준비한다.
B.3 UML 모델 개발 단계
a) ISO/TC 211 조화된 (UML) 모델의 복사본으로 시작한다. 이 모델에 대한 정보는 www.isotc211.org 웹사이트의 조화된 모델 유지관리 그룹(Harmonized Model Management Group, HMMG) 페이지에 서 볼 수 있다.
b) 프로파일에 대한 새 패키지를 생성한다.
c) 프로파일에 필요한 ISO 19160의 이 부 클래스 패키지에 대한 바로 가기를 추가한다(예: EnterpriseArchitect의 패키지로 끌어다 놓기 함).
d) 프로파일에 필요한 만큼, ISO 19160의 이 부 주소 모델 클래스에 대한 특성화를 생성한다.
e) 각 특성화된 클래스 및
— 프로파일에 필요한 다른 속성 및 연관을 다른 클래스에 추가하고,
— 프로파일에 적용할 수 없는 요소를 식별하기 위한 제약 조건을 정의하고,
— 이 표준의 요소를 벗어나는 프로파일 요소의 특수한 경우를 설명하기 위한 제약 조건을 정의한다.
f) 주소 프로파일 문서 적합성 클래스(2.6 참조)에 따라 프로파일에 주소 모델, 유형, 코드 목록 및
기타 특성화된 다이어그램을 작성한다.
B.4 ISO 웹사이트에 프로파일을 업로드 하는 단계
a) 프로파일 문서(PDF) 및 UML 모델(예: XMI 파일)을 ISO/TC 211 사무국에 보낸다.
b) ISO 19160 프로젝트 팀이 프로파일을 검토한 다음, 완전히 부적절한 프로파일은 반환되며 발행되 지 않는다. 주소 프로파일 문서 적합성 클래스에 대한 시험 적합성은 프로파일 개발자의 책임이며 프로젝트 팀이 수행하지 않는다.
c) ISO/TC 211 사무국은 http://standards.iso.org/iso/19160/-1/에 프로파일의 온라인 폴더를 만들고, 관련 파일을 폴더에 업로드하고 readme.txt를 업데이트한다.
d) ISO/TC 211 사무국은 제출자에게 그 프로파일이 업로드 되었다는 것을 통보한다.
부속서 C (참고)
샘플 프로파일
C.1 일반
C.2 및 C.3에는 두 개의 샘플 프로파일이 포함되어 있다. 이들은 프로파일이 무엇인지, 프로파일이 어떻게 문서화되어야 하는지를 설명한다. 이러한 프로파일은 이 표준의 핵심 적합성 클래스를 사용 하고 준수할 준비가 되어 있지만 이 프로파일에 따라 준비된 데이터가 이 표준을 반드시 준수하는 것은 아니다(데이터 적합성이 지정되지 않음). C.4에서는 다른 프로파일의 다이어그램이 프로파일의 추가적인 보기를 제공하기 위해 포함한다.
C.2 보기1:최소주소프로파일
C.2.1 프로파일 개발자
이름: ISO 19160-1 프로젝트 팀
연락처: ISO/TC 211 사무국, 연락처에 대한 정보는 www.isotc211.org를 참조한다. C.2.2 사양
최소 주소 프로파일은 식별자, 좌표 또는 메타데이터와 같은 추가 정보 없이 최소 주소, 즉 구어체로 사용되는 주소를 표현한다. 이 보기는 주소 모델이 다소 복잡하더라도 주소 행(문자열)만으로 구성된 주소를 표현하기 위해 사용될 수 있다는 것을 설명하기 위해 포함되었다.
C.2.3 적합성
최소 주소 프로파일은 핵심 적합성 클래스를 준수한다.
C.2.4 프로파일 모델
Address 및 AddressComponent는 최소 주소 모델의 유일한 클래스이며, 이 두 클래스 간의 연관은 모델의 유일한 연관이다. 주소 모델의 다른 모든 클래스와 연관은 이 프로파일의 범위를 벗어난다(그 림 C.1 참조).
최소 주소 모델의 코드 목록과 유형은 그림 C.2에 나와 있다. AddressComponent에는 type 및 valueInformation이라는 두 가지 속성이 있으며, 다른 모든 속성은 범위를 벗어난다. value 속성은 최 소 주소 모델에 포함된 AddressComponentValue의 유일한 속성이며, 다른 모든 속성은 범위를 벗어 난다.
addressLine은 이 주소 클래스에 대해서 유일하게 유효한 구성요소이다. addressLine 구성요소의 값 은 CharacterString 유형이다.
따라서, 최소 주소 모델의 주소는 하나 이상의 addressLine 구성요소로 구성되며, 각 구성요소는 CharacterString 값을 갖는다. C.2.5의 인스턴스 다이어그램을 참조한다(그림 C.3에서 그림 C.10).
C.2.5 인스턴스 데이터
그림 C.3에서 그림 C.10의 다이어그램은 최소 주소 프로파일에 표현된 주소의 인스턴스를 보여준다.
C.3 보기 2: 샘플 주소 프로파일
C.3.1 프로파일 개발자
이름: ISO 19160-1 프로젝트 팀
연락처: ISO/TC 211 사무국, 연락처에 대한 정보는 www.isotc211.org를 참조한다.
C.3.2 주소 사양
샘플 주소 프로파일은 두 가지 종류의 주소, 즉 도로 주소 및 사서함 주소를 나타낸다. 이는 이 표준의 프로파일 및 문서의 예로 여기에 포함되어 있다. 아래의 사양은 설명을 하기 위한 가상 주소이다. 도로 주소는 “99 Lombardy Street, The Hills, 0039, South Africa”와 같이 주소 번호, 도로 이름, 장소 이름, 우편 번호 및 선택 가능한 국가 이름으로 구성된다. 다음 규칙이 적용된다. 
— 주소 번호는 1에서 10 000 사이의 정수이다.
— 국가 이름은 선택적이지만, 주소의 다른 모든 부분은 필수 항목이다.
도로 주소는 주거용 주택, 상업용 건물 또는 토지 필지로 할당된다. 지방자치단체는 주로 서비스 제 공을 위해 사용하는 도로 주소를 지정할 책임이 있지만, 일반 대중은 물론 방향설정을 위해 주소를 사용한다. 각 지방자치단체는 관할권 내의 모든 건물의 건물 등록부를 관리하며, 각 건물은 등록부에 서 고유 식별자를 갖는다. 각 토지 필지는 국가의 지적 정보 체계에 기록된 국가 고유의 토지 필지 식별자를 가지고 있다.
사서함 주소는 “PO Box 345, Orlando, 2020, South Africa”와 같이 사서함 번호, 우체국 이름, 우편 번 호 및 선택적인 국가 이름으로 구성된다. 다음 규칙이 적용된다.
— 사서함 번호는 1에서 100 000 사이의 정수이다.
— 사서함 번호는 우체국 이름 범위 내에 있다.
— 우체국 이름은 국가의 범위 내에 있다.
— 국가 이름은 선택적이지만, 주소의 다른 모든 부분은 필수 항목이다.
사서함 주소는 우체국에 의해 우체국 건물과 연관된 포스트 사서함에 할당된다. 개인이나 단체는 사 서함을 빌려 사서함으로 배달할 수 있다.
C.3.3 적합성
샘플 주소 프로파일은 핵심 적합성 클래스를 준수한다. 
C.3.4 프로파일 모델
위치는 주소 부여 대상에서만 표현된다. 그림 C.11은 샘플 주소 프로파일의 주소 모델을 보여주며, 그림 C.12 및 그림 C.13은 각각 이 프로파일의 유형과 코드 목록을 보여준다. 다른 AddressComponentTypes의 값 유형은 표 C.3에 나와 있다. 표 C.4는 주소 클래스 별로 유효한 구성 요소 유형을 나열한다. 표 C.5에서 표 C.7은 주소 클래스와 주소 구성요소 유형 및 샘플 주소와 프 로파일 사이의 주소 부여 대상 유형의 매핑을 보여준다.
C.3.5 샘플 주소에서 샘플 주소 프로파일로의 매핑
표 C.8에서 표 C.10은 Address, AddressComponent 및 AddressableObject 클래스의 속성이 샘플 주소에서 프로파일로 매핑되는 방법을 보여준다.
C.3.6 샘플 주소 프로파일에서 샘플 주소로 매핑
표 C.11에서 표 C.13은 Address, AddressComponent 및 AddressableObject 클래스의 속성이 프로파일부터 샘플 주소까지 매핑되는 방법을 보여준다.
C.3.7 인스턴스 데이터
그림 C.14 및 그림 C.15는 샘플 주소 프로파일에 따른 샘플 주소 인스턴스의 보기를 보여준다.
그림 C.16 및 그림 C.17은 샘플 주소 프로파일에 따라 샘플 주소 및 주소 부여 대상의 인스턴스의 보기를 보여준다.
C.3.8 샘플 주소를 외부 데이터에 링크
그림 C.18은 외부 데이터가 어떻게 샘플 주소에 링크될 수 있는지를 보여준다. LA_SpatialUnit은 ISO 19152에 정의되어 있으며, Employee 및 BusinessRegister 클래스는 가상의 클래스이다.
C.4 다른 프로파일의 다이어그램
그림 C.19는 주소 클래스를 주소 클래스의 특성화로 모델링하여 정의할 수 있는 방법을 보여준다. 이 방법이 사용되면, 주소의 특성화에서 클래스 속성은 필수적이어야 하며, 제약 조건은 각 특성화에 서 Address.class에 대한 값을 표시해야 한다. 이 방법을 사용하려면 그림 C.20에 설명된 특성화된 AddressComponent 클래스로부터 집합 연관된 주소 특성화가 필요하다. 이 방법을 사용하는 경우, 7.5.2의 주소 프로파일 문서에 대한 요구사항과 표 C.4에 설명된 내용을 바탕으로 주소의 특성화와 특성화된 AddressComponent 클래스 간의 연관을 모델에 반영한다.
관할 구역 프로파일에서 가져온 그림 C.20은 주소 클래스의 특성화인, DeliveryService가 AddressComponent 클래스의 여러 특성화에서 집합 연관되는 방법을 보여준다. 각 AddressComponent 특성화의 type 속성 값은 제약 조건으로 지정되며 값(예: deliveryServiceName, deliveryServiceNumber 등)은 코드 목록 AddressComponentType(그림에서 설명되지 않음)의 프로파 일 특성화에서 가져온다. value 속성의 유형은 각 AddressComponent 특성화에 대한 제약 조건으로 지정되며 유형(예: CharacterString, Number 등)은 ISO 19103로부터 가져온다.
그림 C.21의 다이어그램은 AddressComponentValue.value의 복잡한 유형을 모델링할 수 있는 방법을 보여준다. 다이어그램을 제공하는 관할 구역에서는, 많은 구성요소 유형이 ThoroughfareAddress AddressClass에서 하위 구성요소를 갖는다. 예를 들면, Road에는 필수 이름과 선택적 지정, 접두어, 접미사 및 유형 요소가 있다. 이는 Road 특성화 클래스의 값 제약 조건에 의해 인용되는 이러한 속 성을 갖는 << type >> 클래스인 RoadValue로 모델링된다.
그림 C.22는 AddressComponentValue.value의 복잡한 유형을 모델링할 수 있는 방법에 대한 보기를 제공한다. 다이어그램을 제공하는 관할 구역에서는, 많은 구성요소 유형이 ThoroughfareAddress AddressClass에서 하위 구성요소를 갖는다. 예를 들어, RoadNumber에는 필수 숫자 속성, 선택적 영 숫자 속성 및 선택적 최고값 및 최소값이 있다. 이러한 속성은 RoadNumber 클래스의 값 제약 조건 에 의해 인용되는 << type >> 클래스인 RoadNumberValue로 모델링된다.
그림 C.23은 AddressableObject의 위치가 일반적인 위치 뿐만 아니라, 하나 이상의 도메인 특정 위 치에 의해 표현되는 방법을 보여준다. 이 다이어그램은 이 표준에서 긴급 대응 및 시설물 사업자를 위한 위치 서비스를 정의한 것이다. 일반적인 위치는 AddressableObject 클래스의 위치 속성으로 표 현된다. 도메인 고유 위치는 UtilityRegister 및 EmergencyAccessRegister 클래스의 위치 속성으로 표 현된다. 후자는 각각 AddressableObject와 일대다의 연관을 갖는다. 코드 목록 AddressPositionType은 buildingCentroid와 같은 일반적인 접근 지점과 serviceConnectionPoint와 같은 도메인별 접근 지점(예: 가스 검침기)을 모두 정의하도록 특성화되어 있다. AddressableObject에 대한 제약 조건은 허용되는 위치 유형을 일반 유형, 즉 UtilityRegister 및 EmergencyAccessRegister의 buildi ngAccessPoint, buildingCentroid 및 propertyCentroid 제약 조건으로 제한하여, 허용되는 위치 유형을 도메인별 유형 (예: serviceConnectionPoint 및 emergencyAccess)으로 제한한다.
부속서 D (참고)
보기: 주소, 주소 구성요소와 주소 부여 대상의 생애주기 및 수명
D.1 일반
주소와 그 구성 요소의 생애주기가 참조하는 주소 부여 대상의 생애주기를 반영하는 경우도 있지만, 주소 부여 대상의 물리적 변경과 관련 없이 주소를 구성하는 구성 요소 또는 주소 중 하나가 변경될 수 있는 경우도 많다. 예를 들면 다음과 같다.
— 지방 행정 당국은 아직 건설하지 않은 부동산에 대한 주소를 제안할 수 있다. 
— 새로운 거주자는 기존 건물이 새로운 이름으로 알려지길 원할 수 있다.
— 지방 행정 당국은 도로의 이름을 변경할 수 있다.
— 우편 운영자는 새로운 배달 패턴을 반영하기 위해 우편 번호를 변경할 수 있다. 
— 주소 구성요소 또는 속성을 기록할 때 오류가 발생할 수 있다.
주소 모델은 다음 4가지 시간 속성 세트를 구분한다.
a) 주소, 주소 구성요소 또는 주소 부여 대상의 표현이 수명 유형의 beginLifespan, endLifespan 및 version 속성으로 표현되는 데이터 세트에 존재하는 기간과 관련된 항목
b) 주소, 주소 구성요소 또는 주소 부여 대상이 수명 유형의 validFrom 및 validTo 속성으로 표현되 는 실제 세계에서 유효/존재했던 기간과 관련된 항목
c) 주소, 주소 구성요소 또는 주소 부여 대상이 lifecycleStage 속성으로 표현되는 그 생애주기에서 진행되는 여러 단계를 반영하는 항목
d) 주소가 AddressedPeriod 연관 클래스에 의해 표현된 주소 부여 대상과 연관되었던 기간을 반영하 는 항목
이 부속서의 내용은 속성의 사용 방법 및 속성의 유지관리 방법을 보여준다. 이 부속서 표의 각 행 은 데이터 세트의 인스턴스를 표현한다. 굵은체 및 기울임체의 사용은 각각 인스턴스의 삽입 및 업 데이트를 나타낸다. validFrom 및 beginLifespan 날짜의 경우, 타임스탬프를 00:00:00로 가정한다. validTo 및 endLifespan 날짜의 경우, 타임스탬프를 23:59:59로 가정한다.
부속서 D는 D2.8.I.5 INSPIRRE의 부속서 C에 기초한다.[10] D.2 주요 도로 주소 구성요소의 생애주기
사례 A(표 D.1):
2007-02-01: 주소 부여 기관은 “West Street”이라는 이름의 도로를 제안한다. 
2007-02-03: 주요 도로 이름이 데이터 세트에 기록된다.
사례 B(표 D.2):
2007-07-01: 주요 도로 이름이 승인되었다. 
2007-07-11: 이것은 이제 데이터 세트에 반영된다.
비고 다른 시나리오에서 결정을 적용하기 위한 타임스탬프는 데이터 세트에 기록하기 위한 타임스 탬프 이후 일 수 있다.
사례 C(표 D.3):
2009-02-13: 주소 부여 기관은 주요 도로 이름을 “Centre Street”로 변경하기로 결정한다. 새로운 이름은 2009-03-01에 발효된다.
2009-02-15: 데이터 세트를 업데이트하여 결정을 기록한다.
사례 D(표 D.4):
2010-04-20: 주소 부여 기관은 도로의 철자를 “Centre Street”에서 “Center Street”로 변경하기로 결정한다. 새로운 이름은 2010-05-01에 발효된다.
2010-04-25: 데이터 세트를 업데이트하여 결정을 기록한다.
사례 E(표 D.5):
2011-01-17: 주소 부여 기관은 2011-02-01부터 기존의 “Center Street”를 포기하는 건설 프로젝트를 승인한다. 이 날짜부터 이름은 역사 속으로 사라질 것이다. 2011-01-18: 데이터 세트를 업데이트하여 결정을 기록한다.
D.3 주소의 생애주기
사례 A(표 D.6):
2012-06-01: 주소 부여 기관은 “Mill Road”에 있는 부동산의 세분화 계획을 위한 새로운 주소를 제안 한다. 협의를 위해 제안서가 발행된다.
2012-06-03: 데이터 세트에 제안서를 기록한다.
사례 B(표 D.7):
2012-09-10: 주소 부여 기관이 새 주소를 승인하지만, 주소에 “114-1 Mill Road”를 사용하기로 결정했다. 주소는 2012-10-01부터 공식화 된다.
2012-09-12: 데이터 세트를 업데이트하여 결정을 기록한다.
사례 C(표 D.8):
2013-01-10: 이 속성은 인접한 속성과 함께 병합되며, 주소는 이 날부터 더 이상 유효하지 않은 것으로 결정된다.
2013-01-15: 데이터 세트를 업데이트하여 결정을 기록한다.
D.4 주소 부여 대상의 생애주기 사례 A(표 D.9):
2012-06-01: 주소 부여 기관은 “그린 에이커(Green Acres)”라고 불리는 새로운 오피스 건물의 건축을 제안한다. 협의를 위해 제안서가 발행된다.
2012-06-03: 데이터 세트에 제안서를 기록한다.
사례 B(표 D.10):
2012-09-10: 주소 부여 기관은 건물 건축을 승인한다. 2012-09-12: 데이터 세트를 업데이트하여 결정을 기록한다.
사례 C(표 D.11):
2013-01-10: 주소 부여 기관은 2013-02-10에 건물 철거를 승인한다. 2013-01-15: 데이터 세트를 업데이트하여 결정을 기록한다.
D.5 주소와주소부여대상간의연관기간 사례 A(표 D.12):
2000-06-01: 주소 부여 기관은 “The Milk House” 건물의 주소로 “44B Bakery Road”를 객체 식별자 7762를 부여해 승인한다.
사례 B(표 D.13):
AddressableObject.id 77622012-09-10: 주소 부여 기관은 새로운 건물이 그 자리에 세워질 수 있도록 “The Milk House”의 철거 를 승인한다.
사례 C(표 D.14):
2013-01-10: 주소 부여 기관은 신축 건물인 “The Computer Shop” 건물의 주소로 “44B Bakery Road” 를 객체 식별자 8632를 부여해 승인한다.
부속서 E (참고)
보기: 주소 구성요소 대체 및 주소 별칭
E.2 및 E.3은 각각 주소 구성요소 값 대체 및 주소 별칭의 보기를 제공한다.
E.2 주소 구성요소 값 대체
표 E.1에서 표 E.3은 대체 구성요소 값의 다른 보기에서의 AddressComponentValue의 속성 값을 설 명한다.
표 E.1의 보기는 주소 구성요소의 속성과 그 대체를 보여준다. 이 보기에서 약어 대체는 선호 수준이 낮다.
표 E.2의 보기는 주소 구성요소의 속성과 그 구어체 대체를 보여준다. 이 보기에서 구어체 대체는 선 수준이 낮다.
표 E.3의 보기는 주소 구성요소의 속성과 언어 대체를 보여준다. 이 보기에서 영어(EN) 및 아프리칸 스어(AF) 구성요소 값은 동일한(최상의) 선호 수준을 가지며, 독일어(DE) 대체는 선호 수준이 낮다.
E.3 주소 별칭
표 E.4에서 표 E.6은 다른 별칭 세트에 대한 Address, AddressComponent 및 AddressAlias 클래스의 관련 속성 값을 보여준다. 표 E.4의 보기는 도로 모퉁이에서 동일한 대상을 참조하는 2개의 주소를 보여준다. 주소 중 하나가 보다 높은 선호 수준을 갖고 있다.
표 E.5의 보기는 동일한 대상을 참조하는 서로 다른 클래스에 속하는 2개의 주소를 보여준다. 그들 은 같은 선호 수준을 갖는다.
표 E.6의 보기는 동일한 대상을 참조하는 다른 언어로 된 동일한 주소 클래스의 2개의 주소를 보여 준다. 이 보기에서 주소는 동일한 기본 선호 수준을 갖는다.
부속서 F (참고)
보기: 외부 클래스
F.1 일반
이 부속서에는 외부(즉, 이 표준에 포함되지 않음) 클래스가 이 표준의 주소 모델의 클래스에 연결될 수 있는 방법을 보여주는 여러 다이어그램이 포함되어 있다. 
F.2 주소및외부데이터간의연관
그림 F.1은 직원, 기업체 및 고객 정보와 같은 외부 데이터가 하나 이상의 주소와 어떻게 연관되는지 를 보여준다.
F.3 ReferenceObject로부터 파생된 외부 클래스
그림 F.2와 그림 F.3은 외부 데이터가 주소 모델의 프로파일에서 주소 구성요소와 어떻게 연관되는 지를 보여준다.
그림 F.2에서 ReferenceSpatialObject는 AddressComponent와 연관된 ReferenceObject에서 파생된다. 외부 클래스인 LA_SpatialUnit 및 LA_SpatialUnitGroup(ISO 19152에서 정의된)은 ReferenceSpatialObject에 연관된다.
그림 F.3에서 ReferenceSpatialObject는 외부 클래스인 Organization과 Person뿐만 아니라, AddressComponent 와 연관된 ReferenceObject에서 파생된다. 외부 클래스인 AdministrativeArea 및 Thoroughfare는 ReferenceSpatialObject의 특성화이다. 또한 그림 F.3은 이러한 특성화가 서로 연관될 수 있음을 보여 준다.